{"ast":null,"code":"var _jsxFileName = \"/Users/us579/Desktop/19T3/my-CV/ResonateTest/realworld/src/pages/index.js\";\nimport React, { Component } from 'react';\nimport Nav from \"../components/nav\";\nimport Card from \"../components/card\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nexport class index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: null\n    };\n    this.renderData = this.renderData.bind(this);\n  }\n\n  componentWillMount() {\n    let url = \"https://jsonplaceholder.typicode.com/users\";\n    fetch(url).then(res => res.json()).then(res => {\n      console.log(res);\n      this.setState({\n        items: res\n      });\n    });\n  }\n\n  renderData() {\n    if (this.state.items !== null) {\n      return this.state.items.map(todo => {\n        React.createElement(Card, {\n          name: 123,\n          email: 213,\n          phone: 123,\n          websit: 123,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"card-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.renderData()))));\n  }\n\n}\nexport default index;","map":{"version":3,"sources":["/Users/us579/Desktop/19T3/my-CV/ResonateTest/realworld/src/pages/index.js"],"names":["React","Component","Nav","Card","InfiniteScroll","index","constructor","props","state","items","renderData","bind","componentWillMount","url","fetch","then","res","json","console","log","setState","map","todo","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,OAAO,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAC;AADC,KAAX;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AACDC,EAAAA,kBAAkB,GAAE;AAChB,QAAIC,GAAG,GAAG,4CAAV;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAG;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,WAAKI,QAAL,CAAc;AACVX,QAAAA,KAAK,EAAEO;AADG,OAAd;AAIH,KARL;AASH;;AACDN,EAAAA,UAAU,GAAE;AACR,QAAI,KAAKF,KAAL,CAAWC,KAAX,KAAqB,IAAzB,EAA8B;AAC1B,aACI,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAsBC,IAAD,IAAQ;AACzB,4BAAC,IAAD;AACA,UAAA,IAAI,EAAE,GADN;AAEA,UAAA,KAAK,EAAE,GAFP;AAGA,UAAA,KAAK,EAAE,GAHP;AAIA,UAAA,MAAM,EAAE,GAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOH,OARD,CADJ;AAWH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB,KAAKb,UAAL,EAAlB,CADJ,CAFR,CAFJ,CADJ;AAcH;;AAlDgC;AAqDrC,eAAeL,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport Nav from \"../components/nav\";\nimport Card from \"../components/card\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nexport class index extends Component {\n    constructor(props){\n        super(props)\n        this.state={\n            items:null\n        }\n        this.renderData = this.renderData.bind(this)\n    }\n    componentWillMount(){\n        let url = \"https://jsonplaceholder.typicode.com/users\";\n        fetch(url)\n            .then(res => res.json())\n            .then(res=> {\n                console.log(res)\n                this.setState({\n                    items: res\n                })\n                \n            })\n    }\n    renderData(){\n        if (this.state.items !== null){\n            return (\n                this.state.items.map((todo)=>{\n                    <Card \n                    name={123}\n                    email={213}\n                    phone={123}\n                    websit={123}\n                    />\n                     \n                })\n            )\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Nav />\n                <div class=\"row\">\n           \n                        <div class=\"card-group\">\n                            <div class=\"col\">{this.renderData()}</div>\n                        </div>\n\n                  \n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default index\n"]},"metadata":{},"sourceType":"module"}